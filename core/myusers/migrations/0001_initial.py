# Generated by Django 4.2.19 on 2025-03-05 19:55

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area_name",
                    models.CharField(max_length=255, verbose_name="Название области"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AudioTextFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_input",
                    models.CharField(
                        max_length=255, verbose_name="Исходное название файла"
                    ),
                ),
                (
                    "name_save",
                    models.CharField(
                        max_length=255, verbose_name="Сохраненное название файла"
                    ),
                ),
                ("data_save", models.DateField(verbose_name="Дата сохранения")),
                (
                    "audio",
                    models.BooleanField(
                        default=False, verbose_name="Является аудиофайлом"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Opponent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Имя (генерируемое)"
                    ),
                ),
                (
                    "position",
                    models.CharField(max_length=255, verbose_name="Должность"),
                ),
                (
                    "responsibility",
                    models.TextField(
                        blank=True, null=True, verbose_name="Область ответственности"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Purpose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание запроса"
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Тип данных"
                    ),
                ),
                (
                    "data_type_short",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Краткий тип данных",
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Желаемый объем данных в месяц",
                    ),
                ),
                (
                    "price_month",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена за месяц"
                    ),
                ),
                (
                    "price_one_file",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Цена за один файл",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Должность"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="TextPure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст из файла")),
                (
                    "id_doc",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="text_content",
                        to="myusers.audiotextfile",
                        verbose_name="Файл",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Название компании"),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Телефон"
                    ),
                ),
                (
                    "worker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="companies",
                        to="myusers.opponent",
                        verbose_name="Должностное лицо",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Call",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lead",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("success", "Успех"),
                            ("fail", "Неудача"),
                            ("hesitant", "Неопределённый"),
                            (None, "Нет данных"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Итог звонка",
                    ),
                ),
                (
                    "fail_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Причина отказа"
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calls",
                        to="myusers.area",
                        verbose_name="Область исследования",
                    ),
                ),
                (
                    "opponent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls",
                        to="myusers.company",
                        verbose_name="Компания",
                    ),
                ),
                (
                    "purpose",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calls",
                        to="myusers.purpose",
                        verbose_name="Цель переговоров",
                    ),
                ),
                (
                    "text_file",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="call",
                        to="myusers.audiotextfile",
                        verbose_name="Файл",
                    ),
                ),
                (
                    "text_pure",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="call",
                        to="myusers.textpure",
                        verbose_name="Текст",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calls",
                        to="myusers.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="audiotextfile",
            name="saver",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="uploaded_files",
                to="myusers.user",
                verbose_name="Загрузивший пользователь",
            ),
        ),
    ]
